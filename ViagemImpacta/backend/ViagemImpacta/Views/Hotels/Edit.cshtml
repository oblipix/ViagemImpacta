@model ViagemImpacta.Models.Hotel
@using ViagemImpacta.Models.Enums

@{
    ViewData["Title"] = "Editar Hotel";
}

<h1>Editar Hotel: @Model.Name</h1>
<hr />
<form asp-action="Edit">
    <div class="row">
        <div class="col-md-6">
            <h4>Dados do Hotel</h4>
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="HotelId" />

            <div class="form-group mb-2">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="HotelAddress" class="control-label"></label>
                <input asp-for="HotelAddress" class="form-control" />
                <span asp-validation-for="HotelAddress" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="City" class="control-label">Cidade</label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="Stars" class="control-label"></label>
                <input asp-for="Stars" class="form-control" type="number" min="1" max="5" />
                <span asp-validation-for="Stars" class="text-danger"></span>
            </div>

            <h5 class="mt-4 mb-3">Comodidades e Serviços</h5>
            
            <!-- Comodidades Básicas -->
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Wifi" /> WiFi Gratuito
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Parking" /> Estacionamento
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Accessibility" /> Acessibilidade
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="PetFriendly" /> Pet Friendly
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="BreakfastIncludes" /> Café da Manhã Incluso
                        </label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="RoomService" /> Room Service
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Restaurant" /> Restaurante
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Bar" /> Bar
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Gym" /> Academia
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Theater" /> Teatro
                        </label>
                    </div>
                </div>
            </div>

            <!-- Área de Lazer -->
            <h6 class="mt-3 mb-2">Área de Lazer</h6>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Pool" /> Piscina
                        </label>
                    </div>
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="WarmPool" /> Piscina Aquecida
                        </label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group form-check mb-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Garden" /> Jardim
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h4>Configuração de Quartos</h4>
            <p class="text-muted">Edite a quantidade de quartos por tipo</p>
            
            <div id="roomTypesContainer">
                @{
                    int index = 0;
                    var existingRooms = Model.Rooms.ToDictionary(r => r.TypeName, r => r);
                }
                @foreach (var roomType in Enum.GetValues<RoomType>())
                {
                    var existingRoom = existingRooms.ContainsKey(roomType) ? existingRooms[roomType] : null;
                    
                    <div class="room-type-entry border p-3 mb-3">
                        <h5>@roomType.ToString()</h5>
                        
                        <input type="hidden" name="Rooms[@index].RoomId" value="@(existingRoom?.RoomId ?? 0)" />
                        <input type="hidden" name="Rooms[@index].TypeName" value="@roomType" />
                        <input type="hidden" name="Rooms[@index].HotelId" value="@Model.HotelId" />
                        
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group mb-2">
                                    <label>Quantidade <span class="text-danger">*</span></label>
                                    <input type="number" min="0" max="100" name="Rooms[@index].TotalRooms" class="form-control" value="@(existingRoom?.TotalRooms ?? 0)" />
                                    <small class="text-muted">0 = não oferecer este tipo</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-2">
                                    <label>Capacidade <span class="text-danger">*</span></label>
                                    <input type="number" min="1" max="4" name="Rooms[@index].Capacity" class="form-control" value="@(existingRoom?.Capacity ?? 2)" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-2">
                                    <label>Preço Diária (R$) <span class="text-danger">*</span></label>
                                    <input type="number" step="0.01" min="0.01" name="Rooms[@index].AverageDailyPrice" class="form-control" value="@(existingRoom?.AverageDailyPrice ?? 0)" />
                                </div>
                            </div>
                        </div>
                    </div>
                    index++;
                }
            </div>
        </div>
    </div>

    <hr />
    <div class="form-group mt-4">
        <input type="submit" value="Salvar Alterações" class="btn btn-success" />
        <a asp-action="Index" class="btn btn-secondary">Voltar</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Adicionar validação customizada
            const form = document.querySelector('form');
            
            form.addEventListener('submit', function(e) {
                const totalRoomsInputs = document.querySelectorAll('input[name*="TotalRooms"]');
                let hasRooms = false;
                
                totalRoomsInputs.forEach(input => {
                    if (parseInt(input.value) > 0) {
                        hasRooms = true;
                    }
                });
                
                if (!hasRooms) {
                    e.preventDefault();
                    alert('É necessário configurar pelo menos um tipo de quarto com quantidade maior que 0.');
                    return false;
                }
                
                // Validar preços para quartos com quantidade > 0
                for (let i = 0; i < totalRoomsInputs.length; i++) {
                    const totalRooms = parseInt(totalRoomsInputs[i].value);
                    if (totalRooms > 0) {
                        const priceInput = document.querySelector(`input[name="Rooms[${i}].AverageDailyPrice"]`);
                        const capacityInput = document.querySelector(`input[name="Rooms[${i}].Capacity"]`);
                        
                        if (!priceInput.value || parseFloat(priceInput.value) <= 0) {
                            e.preventDefault();
                            alert('Preço é obrigatório para quartos com quantidade maior que 0.');
                            priceInput.focus();
                            return false;
                        }
                        
                        if (!capacityInput.value || parseInt(capacityInput.value) <= 0) {
                            e.preventDefault();
                            alert('Capacidade é obrigatória para quartos com quantidade maior que 0.');
                            capacityInput.focus();
                            return false;
                        }
                    }
                }
            });
        });
    </script>
}
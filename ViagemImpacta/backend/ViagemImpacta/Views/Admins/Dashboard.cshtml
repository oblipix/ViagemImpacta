@using ViagemImpacta.Models.Dashboard
@{  
    var name = ViewBag.Name ?? "Admin";  
    var balance = ViewBag.Balance ?? 0.0;  
    var hotelRevenueData = ViewBag.HotelRevenueData as IEnumerable<HotelRevenueData>;
    var reservationStatusData = ViewBag.ReservationStatusData as IEnumerable<ReservationStatusData>;
}  

<link rel="stylesheet" href="~/css/dashboard.css"/>  

@if (ViewBag.Role == "Attendant")
{  
    <div class="alert alert-warning text-center" role="alert">
        Você está acessando o dashboard como <strong>atendente</strong>, logo, possui algumas opções bloqueadas.
    </div>  
}
<div class="dashboard-container">  
    <div class="dashboard-topbar d-flex align-items-center justify-content-between">  
        <div class="d-flex align-items-center gap-2">  
            <h4 class="mb-0">Olá, @name</h4>  
            <form asp-controller="Admins" asp-action="Logout" method="post" class="ms-2">  
                <button type="submit" class="btn btn-outline-danger p-0 d-flex align-items-center justify-content-center" title="Sair" style="width: 30px; height: 30px;">  
                    <span class="material-icons" style="font-size: 1.3rem;">logout</span>  
                </button>  
            </form>  
        </div>  
        <div class="faturamento-box">  
            <strong>Faturamento Mensal:</strong>  
            <span class="fs-4">@balance.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</span>  
        </div>  
    </div>  
    <div class="dashboard-main">  
        <aside class="dashboard-sidebar">  
            <h5 class="mb-3">Gerenciamento</h5>  
            <div class="list-group mb-4">  
                <a asp-controller="Users" asp-action="Index" class="list-group-item list-group-item-action"><span class="material-icons">group</span> Clientes</a>  
                <a asp-controller="Employees" asp-action="Index" class="list-group-item list-group-item-action"><span class="material-icons">badge</span> Funcionários</a>  
                <a asp-controller="Hotels" asp-action="Index" class="list-group-item list-group-item-action"><span class="material-icons">hotel</span> Hotéis</a>  
                <a asp-controller="Reservations" asp-action="Index" class="list-group-item list-group-item-action"><span class="material-icons">event</span> Reservas</a>  
                <button class="list-group-item list-group-item-action" disabled><span class="material-icons">rate_review</span> Avaliações</button>  
            </div>  
        </aside>  
        <section class="dashboard-content">  
            <div class="row g-4">  
                <div class="col-lg-6 col-md-12">  
                    <div class="card h-100 shadow-sm">
                        <div class="card-header bg-white border-0 text-center">
                            <h5 class="card-title m-2">Informações de Status de Reservas</h5> 
                        </div>
                        <div class="card-body">  
                            <canvas id="reservationStatusChart" style="min-height: 240px;"></canvas>
                        </div>  
                    </div>  
                </div>  
                <div class="col-lg-6 col-md-12">
                    <div class="card h-100 shadow-sm">  
                        <div class="card-header bg-white border-0 text-center">
                            <h5 class="card-title m-2">Faturamento por Hotel</h5>
                        </div>
                        <div class="card-body">  
                            <canvas id="hotelRevenueChart" style="min-height: 240px;"></canvas>
                        </div>  
                    </div>  
                </div>  
            </div>  
        </section>  
    </div>  
</div>

@section Scripts {
    <script>
        const hotelRevenueData = @Html.Raw(hotelRevenueData != null ? Newtonsoft.Json.JsonConvert.SerializeObject(hotelRevenueData) : "[]");
        const reservationStatusData = @Html.Raw(reservationStatusData != null ? Newtonsoft.Json.JsonConvert.SerializeObject(reservationStatusData) : "[]");

        if (reservationStatusData && reservationStatusData.length > 0)
        {
            const faturamentoPacoteData = {
                labels: reservationStatusData.map(r => r.status || r.Status),
                datasets: [{
                    label: "Status de Reservas",
                    data: reservationStatusData.map(r => r.count || r.Count),
                    backgroundColor: ["#28a745", "#ffc107", "#dc3545"],
                    borderWidth: 0,
                    cutout: '65%'
                    }]
            };
            new Chart(document.getElementById('reservationStatusChart'), {
                type: 'doughnut',
                data: faturamentoPacoteData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });
        }

        if (hotelRevenueData && hotelRevenueData.length > 0) 
        {
            const faturamentoHotelData = {
                labels: hotelRevenueData.slice(0, 10).map(h => h.hotelName || h.HotelName),
                datasets: [{
                    label: "Faturamento (R$)",
                    data: hotelRevenueData.slice(0, 10).map(h => h.revenue || h.Revenue),
                    backgroundColor: ["#dc3545", "#20c997", "#6f42c1", "#fd7e14", "#e83e8c", "#ffc107"],
                    }]
            };
            new Chart(document.getElementById('hotelRevenueChart'), {
                type: 'pie',
                data: faturamentoHotelData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                }
            });
        }
    </script>
}